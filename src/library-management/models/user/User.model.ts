import { Schema } from "mongoose";
import { IUser } from "@/library-management/types";
import { MAX_EMAIL_LENGTH, MAX_NAME_LENGTH, MAX_PASSWORD_LENGTH, MIN_NAME_LENGTH, MIN_PASSWORD_LENGTH, USER_PASSWORD_REGEX_PATTERN, USER_PASSWORD_REGEX_INFO } from "@/library-management/constants";

// creatign an schema for user
const userSchema: Schema<IUser> = new Schema({
    name: {
        type: String,
        required: true,
        min: [MIN_NAME_LENGTH, `Name should be at least ${MIN_NAME_LENGTH} characters long`],
        max: [MAX_NAME_LENGTH, `Name should be at most ${MAX_NAME_LENGTH} characters long`],
        trim: true,
    },
    email: {
        type: String,
        required: true,
        unique: true,
        trim: true,
        max: [MAX_EMAIL_LENGTH, `Email should be at most ${MAX_EMAIL_LENGTH} characters long`],
    },
    password: {
        type: String,
        required: true,
        trim: true,
        min: [MIN_PASSWORD_LENGTH, `Password should be at least ${MIN_PASSWORD_LENGTH} characters long`],
        max: [MAX_PASSWORD_LENGTH, `Password should be at most ${MAX_PASSWORD_LENGTH} characters long`],
        match: [USER_PASSWORD_REGEX_PATTERN, USER_PASSWORD_REGEX_INFO]
    },
    // _id auto generated by mongoDB
    userId: String,
    books: {
        currentlyReading: [{
            bookId: String,
            allotmentDate: Date,
            totalAllotedDays: Number,
        }],
        previouslyBorrowed: [{
            bookId: String,
            allotmentDate: Date,
            totalAllotedDays: Number,
        }],
    },
    fine: Number,
    
}, { timestamps: true });